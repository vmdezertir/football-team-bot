import { EScenes } from '@app/enums';
import { FavoriteRepository } from '@app/repositories';
import { ApiFootballService } from '@app/services';
import { Injectable, Logger } from '@nestjs/common';
import { Action, Ctx, Scene, SceneEnter } from 'nestjs-telegraf';
import { Scenes } from '@app/@types/custom';
import { Markup } from 'telegraf';
import { getAnswer, getFavoriteTeamButtons, getUserId } from '@app/utils';

interface SceneData {}
type SceneCtx = Scenes.SContext<SceneData>;

@Injectable()
@Scene(EScenes.FAVORITE)
export class FavoriteScene {
  constructor(
    private readonly footballService: ApiFootballService,
    private readonly repository: FavoriteRepository,
  ) {}

  private readonly logger = new Logger(FavoriteScene.name);

  @SceneEnter()
  async start(@Ctx() ctx: SceneCtx) {
    await ctx.reply('–û–±—Ä–æ–±–ª—é—é –∑–∞–ø–∏—Ç ‚öΩ ‚öΩ ‚öΩ');
    const userId = getUserId(ctx);
    if (!userId) return;

    const teams = await this.repository.findBy({ userId });
    if (!teams.length) {
      await ctx.editMessageText(
        'üîç –£ —Ç–µ–±–µ —â–µ –≤—ñ–¥—Å—É—Ç–Ω—ñ —É–ª—é–±–ª–µ–Ω—ñ –∫–æ–º–∞–Ω–¥–∏\n –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂–∏ —Å–≤–æ—ó —É–ª—é–±–ª–µ–Ω—ñ –∫–æ–º–∞–Ω–¥–∏\n –í–∏–±–µ—Ä–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é!',
        { parse_mode: 'HTML' },
      );
      return;
    }

    const menu = Markup.inlineKeyboard(getFavoriteTeamButtons(teams));
    await ctx.replyWithHTML(
      'Oc—å —Å–ø–∏—Å–æ–∫ –Ω–∞–π–∫—Ä–∞—â–∏—Ö –∫–æ–º–∞–Ω–¥ —Å–≤—ñ—Ç—É, –±–µ–∑ –ø–µ—Ä–µ–±—ñ–ª—å—à–µ–Ω–Ω—èüòâ\n –ü–æ —è–∫—ñ–π –∫–æ–º–∞–Ω–¥—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è?',
      menu,
    );
    return;
  }

  @Action(/^FAVORITE_TEAM_/)
  async chooseTeam(@Ctx() ctx: SceneCtx) {
    const answer = getAnswer(ctx.update);

    if (!answer || !answer.startsWith('FAVORITE_TEAM_')) {
      return;
    }

    const teamId = Number(answer.split('FAVORITE_TEAM_')[1] || 0);
  }
}
